{"version":3,"sources":["context/ProjectsContext.jsx","components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectsGrid.jsx","pages/Projects.jsx"],"names":["ProjectsContext","createContext","ProjectsProvider","props","projects","setProjects","useState","projectsData","searchProject","setSearchProject","selectProject","setSelectProject","searchProjectsByTitle","filter","item","title","toLowerCase","includes","selectProjectsByCategory","category","charAt","toUpperCase","slice","_jsx","Provider","value","children","ProjectSingle","_ref","image","slug","motion","div","initial","opacity","animate","delay","transition","ease","duration","Link","to","_jsxs","className","src","alt","selectOptions","ProjectsFilter","onChange","e","target","map","option","ProjectsGrid","useContext","FiSearch","id","name","type","required","placeholder","project","img","Projects","context"],"mappings":"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","file":"static/js/5.714cc815.chunk.js","sourcesContent":["import { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects';\n\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n  const [projects, setProjects] = useState(projectsData);\n  const [searchProject, setSearchProject] = useState('');\n  const [selectProject, setSelectProject] = useState('');\n\n  // Search projects by project title\n  const searchProjectsByTitle = projects.filter((item) => {\n    const result = item.title\n      .toLowerCase()\n      .includes(searchProject.toLowerCase())\n      ? item\n      : searchProject === ''\n      ? item\n      : '';\n    return result;\n  });\n\n  // Select projects by project category\n  const selectProjectsByCategory = projects.filter((item) => {\n    let category =\n      item.category.charAt(0).toUpperCase() + item.category.slice(1);\n    return category.includes(selectProject);\n  });\n\n  return (\n    <ProjectsContext.Provider\n      value={{\n        projects,\n        setProjects,\n        searchProject,\n        setSearchProject,\n        searchProjectsByTitle,\n        selectProject,\n        setSelectProject,\n        selectProjectsByCategory,\n      }}\n    >\n      {props.children}\n    </ProjectsContext.Provider>\n  );\n};\n","import { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\n\nconst ProjectSingle = ({ title, category, image, slug }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: 'easeInOut',\n        duration: 0.7,\n        delay: 0.15,\n      }}\n    >\n      <Link to={`/projects/${slug}`} aria-label=\"Single Project\">\n        <div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\n          <div>\n            <img\n              src={image}\n              className=\"rounded-t-xl border-none\"\n              alt=\"Single Project\"\n            />\n          </div>\n          <div className=\"text-center px-4 py-6\">\n            <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\n              {title}\n            </p>\n            <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\n              {category}\n            </span>\n          </div>\n        </div>\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default ProjectSingle;\n","const selectOptions = ['Web Application', 'UI/UX Design'];\n\nconst ProjectsFilter = ({ setSelectProject }) => {\n  return (\n    <select\n      onChange={(e) => {\n        setSelectProject(e.target.value);\n      }}\n      className=\"font-general-medium \n                px-4\n                sm:px-6\n                py-2\n                border\n                dark:border-secondary-dark\n                rounded-lg\n                text-sm\n                sm:text-md\n                dark:font-medium\n                bg-secondary-light\n                dark:bg-ternary-dark\n                text-primary-dark\n                dark:text-ternary-light\n            \"\n    >\n      <option value={setSelectProject} className=\"text-sm sm:text-md\">\n        All Projects\n      </option>\n      {selectOptions.map((option) => (\n        <option className=\"text-normal sm:text-md\" key={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default ProjectsFilter;\n","import { useContext } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport { ProjectsContext } from '../../context/ProjectsContext';\nimport ProjectSingle from './ProjectSingle';\nimport ProjectsFilter from './ProjectsFilter';\n\nconst ProjectsGrid = () => {\n  const {\n    projects,\n    searchProject,\n    setSearchProject,\n    searchProjectsByTitle,\n    selectProject,\n    setSelectProject,\n    selectProjectsByCategory,\n  } = useContext(ProjectsContext);\n\n  return (\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n      <div className=\"text-center\">\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n          Projects portfolio\n        </p>\n      </div>\n      <div className=\"mt-10 sm:mt-16\">\n        <h3\n          className=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n        >\n          Search projects by title or filter by category\n        </h3>\n        <div\n          className=\"\n                        flex\n                        justify-between\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n        >\n          <div className=\"flex justify-between gap-2\">\n            <span\n              className=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n            >\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n            </span>\n            <input\n              onChange={(e) => {\n                setSearchProject(e.target.value);\n              }}\n              className=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n              id=\"name\"\n              name=\"name\"\n              type=\"search\"\n              required=\"\"\n              placeholder=\"Search Projects\"\n              aria-label=\"Name\"\n            />\n          </div>\n          <ProjectsFilter setSelectProject={setSelectProject} />\n        </div>\n      </div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\n        {selectProject\n          ? selectProjectsByCategory.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                slug={project.slug}\n              />\n            ))\n          : searchProject\n          ? searchProjectsByTitle.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                slug={project.slug}\n              />\n            ))\n          : projects.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                slug={project.slug}\n              />\n            ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectsGrid;\n","import ProjectsGrid from '../components/projects/ProjectsGrid';\nimport { ProjectsContext, ProjectsProvider } from '../context/ProjectsContext';\n\nconst Projects = () => {\n  return (\n    <ProjectsProvider>\n      <div className=\"container mx-auto\">\n        <ProjectsGrid context={ProjectsContext} />\n      </div>\n    </ProjectsProvider>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}